services:
  frontend-prod:
    container_name: situationroom-frontend-prod
    image: dariokrieg/situationroom-frontend:latest
    pull_policy: always
    restart: always
    ports:
      - "13400:80"
    networks:
      - app-network-prod

  api-prod:
    container_name: situationroom-backend-prod
    image: dariokrieg/situationroom-backend:latest
    pull_policy: always
    restart: always
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__SituationRoomDb: "Server=mssql-prod;User=sa;Password=INSERT_SAFE_PW_HERE;TrustServerCertificate=true;Initial Catalog=HERMESSituationRoom;"
    ports:
      - "13500:8080"
    depends_on:
      - mssql-prod
    networks:
      - app-network-prod

  mssql-prod:
    container_name: sql-server-situation-prod
    image: mcr.microsoft.com/mssql/server:2022-latest
    restart: always
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "INSERT_SAFE_PW_HERE"
      MSSQL_PID: "Developer"
    ports:
      - "13600:1433"
    volumes:
      - sql-server-data-prod:/var/opt/mssql
    networks:
      - app-network-prod

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - frontend-prod
      - api-prod
    networks:
      - app-network-prod

  certbot:
    image: certbot/certbot
    container_name: certbot
    entrypoint: /bin/sh -c "trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew; done"
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt

networks:
  app-network-prod:
    driver: bridge

volumes:
  sql-server-data-prod:
    driver: local